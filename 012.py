#!/usr/bin/env python

# The sequence of triangle numbers is generated by adding the natural
# numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 +
# 7 = 28. The first ten terms would be: 1, 3, 6, 10, 15, 21, 28, 36,
# 45, 55, ...

# We can see that 28 is the first triangle number to have over five
# divisors. What is the value of the first triangle number to have
# over five hundred divisors?

# Discussion: Take 5050 for example (the 100th triangle number). It's
# prime factors are: 2, 5, 5 and 101. Now reduce the list to a list of
# unique numbers with their repetition represented in their
# exponents. So, the list 2, 5, 5, 101 becomes: 2^1, 5^2,101^1. Now, add
# 1 to every exponent and multiply the resulting numbers. So, that
# would give us: (1+1) * (2 + 1) * (1 + 1) = 12. That's the number of
# divisors that 5050 has. And, of course, that can be verified using
# the divisors method:

import euler
import math
"""
# Efficient implementation for get_divisors
def get_divisors(n):
    factors = euler.prime_factors(n)
    divisors = []
    for x in set(factors):
        divisors.append(factors.count(x)+1)
    return reduce(lambda x,y:x*y, divisors)


for x in euler.triangle():
    div_num = get_divisors(x)
    if div_num > 500:
        print '#%s, %s divisors' %(x,div_num)
        break
"""    
#76582780
    
"""
# 52 seconds
def tri(n):
	return ((n+1)*(n)/2);
for i in range(7,1000000):
	l=[]
	l.append(1)
	l.append(tri(i))
	for j in range(2,int(math.sqrt(tri(i)))+1):
		if(not tri(i)%j):
			l.append(j)
			l.append(tri(i)/j)
	if(len(l)>500):
		print i
		print tri(i)
		break
"""

# 3 second implementation
L=[]
for x in euler.prime():
    L.append(x)
    if len(L) > 2000:
        break

i = f = x = 0
while (f <= 500):
    i = i + 1   
    x = x + i
    f = 2
    a = 1
    j = 0
    y = x
    while (y > 1):
        k = 1
        while (x%(L[j]**k) == 0):
            k = k + 1
        if (x%(L[j]) == 0):
            a = a * k
            y = y/(L[j]**(k-1))
        j = j + 1
    if (a > f):
        f = a
print x,f
